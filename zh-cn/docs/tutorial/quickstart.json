{
  "filename": "quickstart.md",
  "__html": "<h1 id=\"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B\">快速开始 <a class=\"header-anchor\" href=\"#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B\">#</a></h1>\n<p>让我们从一个微服务示例开始!</p>\n<h2 id=\"%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\">环境准备 <a class=\"header-anchor\" href=\"#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\">#</a></h2>\n<ul>\n<li><a href=\"/zh-cn/docs/ops/dashboard/deploy-server.html\">dashboard快速部署</a></li>\n<li><a href=\"/zh-cn/docs/ops/tccserver/deploy-alone.html\">server快速部署</a></li>\n</ul>\n<h2 id=\"%E7%A4%BA%E4%BE%8B\">示例 <a class=\"header-anchor\" href=\"#%E7%A4%BA%E4%BE%8B\">#</a></h2>\n<p>用户购买商品的业务逻辑。整个业务逻辑由3个微服务提供支持：</p>\n<blockquote>\n<p>支付服务：根据采购需求创建订单，发起支付。<br>\n资金服务：从用户资金帐户中扣除余额。<br>\n红包服务：从用户红包账户中扣除余额。</p>\n</blockquote>\n<h3 id=\"%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E6%9E%B6%E6%9E%84%E5%9B%BE\">微服务部署架构图 <a class=\"header-anchor\" href=\"#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E6%9E%B6%E6%9E%84%E5%9B%BE\">#</a></h3>\n<p><img src=\"../img/sample-project-deployment.png\" alt=\"微服务部署架构图\"></p>\n<h3 id=\"%E6%B6%89%E5%8F%8A%E6%9C%8D%E5%8A%A1\">涉及服务 <a class=\"header-anchor\" href=\"#%E6%B6%89%E5%8F%8A%E6%9C%8D%E5%8A%A1\">#</a></h3>\n<h4 id=\"%E7%BA%A2%E5%8C%85%E6%9C%8D%E5%8A%A1\">红包服务 <a class=\"header-anchor\" href=\"#%E7%BA%A2%E5%8C%85%E6%9C%8D%E5%8A%A1\">#</a></h4>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">RedPacketTradeOrderService</span> </span>{\n    <span class=\"hljs-meta\">@EnableTcc</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(RedPacketTradeOrderDto tradeOrderDto)</span></span>;\n}\n</code></pre>\n<h4 id=\"%E8%B5%84%E9%87%91%E6%9C%8D%E5%8A%A1\">资金服务 <a class=\"header-anchor\" href=\"#%E8%B5%84%E9%87%91%E6%9C%8D%E5%8A%A1\">#</a></h4>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">CapitalTradeOrderService</span> </span>{\n    <span class=\"hljs-meta\">@EnableTcc</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(CapitalTradeOrderDto tradeOrderDto)</span></span>;\n}\n</code></pre>\n<h4 id=\"%E8%AE%A2%E5%8D%95%E6%9C%8D%E5%8A%A1\">订单服务 <a class=\"header-anchor\" href=\"#%E8%AE%A2%E5%8D%95%E6%9C%8D%E5%8A%A1\">#</a></h4>\n<p>主要业务逻辑如下：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> org.mengyun.tcctransaction.sample.dubbo.order.service;\n<span class=\"hljs-meta\">@Service</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PaymentServiceImpl</span> </span>{\n    <span class=\"hljs-meta\">@Autowired</span>\n    CapitalTradeOrderService capitalTradeOrderService;\n    <span class=\"hljs-meta\">@Autowired</span>\n    RedPacketTradeOrderService redPacketTradeOrderService;\n    <span class=\"hljs-meta\">@Autowired</span>\n    OrderRepository orderRepository;\n    <span class=\"hljs-meta\">@Compensable</span>(confirmMethod = <span class=\"hljs-string\">\"confirmMakePayment\"</span>, cancelMethod = <span class=\"hljs-string\">\"cancelMakePayment\"</span>, asyncConfirm = <span class=\"hljs-keyword\">false</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">makePayment</span><span class=\"hljs-params\">(@UniqueIdentity String orderNo)</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"order try make payment called.time seq:\"</span> + DateFormatUtils.format(Calendar.getInstance(), <span class=\"hljs-string\">\"yyyy-MM-dd HH:mm:ss\"</span>));\n        Order order = orderRepository.findByMerchantOrderNo(orderNo);\n        String result = capitalTradeOrderService.record(buildCapitalTradeOrderDto(order));\n        String result2 = redPacketTradeOrderService.record(buildRedPacketTradeOrderDto(order));\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">confirmMakePayment</span><span class=\"hljs-params\">(String orderNo)</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"order confirm make payment called. time seq:\"</span> + DateFormatUtils.format(Calendar.getInstance(), <span class=\"hljs-string\">\"yyyy-MM-dd HH:mm:ss\"</span>));\n        Order foundOrder = orderRepository.findByMerchantOrderNo(orderNo);\n        <span class=\"hljs-comment\">//check if the trade order status is PAYING, if no, means another call confirmMakePayment happened, return directly, ensure idempotency.</span>\n        <span class=\"hljs-keyword\">if</span> (foundOrder != <span class=\"hljs-keyword\">null</span>) {\n            foundOrder.confirm();\n            orderRepository.update(foundOrder);\n        }\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">cancelMakePayment</span><span class=\"hljs-params\">(String orderNo)</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"order cancel make payment called.time seq:\"</span> + DateFormatUtils.format(Calendar.getInstance(), <span class=\"hljs-string\">\"yyyy-MM-dd HH:mm:ss\"</span>));\n        Order foundOrder = orderRepository.findByMerchantOrderNo(orderNo);\n        <span class=\"hljs-comment\">//check if the trade order status is PAYING, if no, means another call cancelMakePayment happened, return directly, ensure idempotency.</span>\n        <span class=\"hljs-keyword\">if</span> (foundOrder != <span class=\"hljs-keyword\">null</span>) {\n            foundOrder.cancelPayment();\n            orderRepository.update(foundOrder);\n        }\n    }\n}\n\n</code></pre>\n<h3 id=\"%E4%B8%8D%E5%90%8Crpc%E8%B0%83%E7%94%A8%E6%96%B9%E5%BC%8F\">不同RPC调用方式 <a class=\"header-anchor\" href=\"#%E4%B8%8D%E5%90%8Crpc%E8%B0%83%E7%94%A8%E6%96%B9%E5%BC%8F\">#</a></h3>\n<h4 id=\"dubbo%E8%B0%83%E7%94%A8\">dubbo调用 <a class=\"header-anchor\" href=\"#dubbo%E8%B0%83%E7%94%A8\">#</a></h4>\n<p>示例工程:<a href=\"https://github.com/changmingxie/tcc-transaction/tree/master-2.x/tcc-transaction-tutorial-sample/tcc-transaction-dubbo-sample\">tcc-transaction-dubbo-sample</a></p>\n<blockquote>\n<p>tcc-transaction-dubbo-capital(资金服务)<br>\ntcc-transaction-dubbo-redpacket(红包服务)<br>\ntcc-transaction-dubbo-order(订单服务)</p>\n</blockquote>\n<p>以下说明如何使用tcc-tranction</p>\n<h5 id=\"%E7%AC%AC%E4%B8%80%E6%AD%A5-pom%E5%BC%95%E5%85%A5\">第一步 pom引入 <a class=\"header-anchor\" href=\"#%E7%AC%AC%E4%B8%80%E6%AD%A5-pom%E5%BC%95%E5%85%A5\">#</a></h5>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mengyun<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>tcc-transaction-dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${tcc-transaction.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mengyun<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>tcc-transaction-spring<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${tcc-transaction.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<h5 id=\"%E7%AC%AC%E4%BA%8C%E6%AD%A5-spring-xml%E9%85%8D%E7%BD%AE\">第二步 spring xml配置 <a class=\"header-anchor\" href=\"#%E7%AC%AC%E4%BA%8C%E6%AD%A5-spring-xml%E9%85%8D%E7%BD%AE\">#</a></h5>\n<p>这里以tcc-transaction-dubbo-order中appcontext-service-tcc.xml为例</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">beans</span> <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n       <span class=\"hljs-attr\">xmlns:tcc</span>=<span class=\"hljs-string\">\"http://www.tcctransaction.org/schema/tcc\"</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans\"</span>\n       <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.tcctransaction.org/schema/tcc http://www.tcctransaction.org/schema/tcc.xsd\"</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!--驱动TccClient--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tcc:annotation-driven</span> <span class=\"hljs-attr\">client-config</span>=<span class=\"hljs-string\">\"clientConfig\"</span>/&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.mengyun.tcctransaction.ClientConfig\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"clientConfig\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"recoveryConfig\"</span> &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.mengyun.tcctransaction.properties.RecoveryProperties\"</span>&gt;</span>\n                <span class=\"hljs-comment\">&lt;!--服务模式关闭补偿任务--&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"recoveryEnabled\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"false\"</span>/&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">property</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"storeConfig\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.mengyun.tcctransaction.properties.store.StoreProperties\"</span>&gt;</span>\n                <span class=\"hljs-comment\">&lt;!--对事件进行隔离--&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"domain\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"TCC:DUBBO:ORDER\"</span>/&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"storageType\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"REMOTING\"</span>/&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">property</span>&gt;</span>\n        <span class=\"hljs-comment\">&lt;!--在storageType=REMOTING需要使用--&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"registryConfig\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.mengyun.tcctransaction.properties.registry.ClientRegistryProperties\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"registryType\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"direct\"</span>/&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"direct\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.mengyun.tcctransaction.discovery.registry.direct.DirectRegistryProperties\"</span>&gt;</span>\n                        <span class=\"hljs-comment\">&lt;!--server ip和port--&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"serverAddresses\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"127.0.0.1:2332\"</span>/&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">property</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">property</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">bean</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">beans</span>&gt;</span>\n\n</code></pre>\n<h5 id=\"%E7%AC%AC%E4%B8%89%E6%AD%A5-%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8\">第三步 代码使用 <a class=\"header-anchor\" href=\"#%E7%AC%AC%E4%B8%89%E6%AD%A5-%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8\">#</a></h5>\n<h6 id=\"%E4%B8%BB%E4%BA%8B%E5%8A%A1%E5%AE%9E%E7%8E%B0\">主事务实现 <a class=\"header-anchor\" href=\"#%E4%B8%BB%E4%BA%8B%E5%8A%A1%E5%AE%9E%E7%8E%B0\">#</a></h6>\n<p>在tcc实现上方法上添加@Compensable注解，设置confirmMethod和cancelMethod方法，分别为tcc的confirm和cancel方法。<br>\n订单服务(tcc-transaction-dubbo-order)</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Service</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PaymentServiceImpl</span> </span>{\n    <span class=\"hljs-meta\">@Compensable</span>(confirmMethod = <span class=\"hljs-string\">\"confirmMakePayment\"</span>, cancelMethod = <span class=\"hljs-string\">\"cancelMakePayment\"</span>, asyncConfirm = <span class=\"hljs-keyword\">false</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">makePayment</span><span class=\"hljs-params\">(@UniqueIdentity String orderNo)</span> </span>{\n        String result = capitalTradeOrderService.record(buildCapitalTradeOrderDto(order));\n        String result2 = redPacketTradeOrderService.record(buildRedPacketTradeOrderDto(order));\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">confirmMakePayment</span><span class=\"hljs-params\">(String orderNo)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">cancelMakePayment</span><span class=\"hljs-params\">(String orderNo)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n    }\n}\n\n</code></pre>\n<h6 id=\"%E4%B8%8A%E4%B8%8B%E6%96%87%E4%BC%A0%E9%80%92\">上下文传递 <a class=\"header-anchor\" href=\"#%E4%B8%8A%E4%B8%8B%E6%96%87%E4%BC%A0%E9%80%92\">#</a></h6>\n<p>标有@EnableTcc注解的接口即为<strong>tcc接口</strong>，在RPC调用时起到上下文传递作用。<br>\n资金服务(tcc-transaction-dubbo-capital)tcc接口</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">CapitalTradeOrderService</span> </span>{\n    <span class=\"hljs-meta\">@EnableTcc</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(CapitalTradeOrderDto tradeOrderDto)</span></span>;\n}\n</code></pre>\n<p>红包服务(tcc-transaction-dubbo-redpacket)tcc接口</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">RedPacketTradeOrderService</span> </span>{\n    <span class=\"hljs-meta\">@EnableTcc</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(RedPacketTradeOrderDto tradeOrderDto)</span></span>;\n}\n</code></pre>\n<h6 id=\"%E5%88%86%E6%94%AF%E4%BA%8B%E5%8A%A1%E5%AE%9E%E7%8E%B0\">分支事务实现 <a class=\"header-anchor\" href=\"#%E5%88%86%E6%94%AF%E4%BA%8B%E5%8A%A1%E5%AE%9E%E7%8E%B0\">#</a></h6>\n<p>在tcc实现上方法上添加@Compensable注解，设置confirmMethod和cancelMethod方法，分别为tcc的confirm和cancel方法。<br>\n资金服务(tcc-transaction-dubbo-capital)tcc事务实现</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CapitalTradeOrderServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">CapitalTradeOrderService</span> </span>{\n    <span class=\"hljs-meta\">@Compensable</span>(confirmMethod = <span class=\"hljs-string\">\"confirmRecord\"</span>, cancelMethod = <span class=\"hljs-string\">\"cancelRecord\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(CapitalTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do someting ...</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"success\"</span>;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">confirmRecord</span><span class=\"hljs-params\">(CapitalTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">cancelRecord</span><span class=\"hljs-params\">(CapitalTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n    }\n}\n\n</code></pre>\n<p>红包服务(tcc-transaction-dubbo-redpacket)tcc事务实现</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RedPacketTradeOrderServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">RedPacketTradeOrderService</span> </span>{\n    <span class=\"hljs-meta\">@Compensable</span>(confirmMethod = <span class=\"hljs-string\">\"confirmRecord\"</span>, cancelMethod = <span class=\"hljs-string\">\"cancelRecord\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(RedPacketTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"success\"</span>;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">confirmRecord</span><span class=\"hljs-params\">(RedPacketTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">cancelRecord</span><span class=\"hljs-params\">(RedPacketTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n    }\n}\n\n</code></pre>\n<h5 id=\"%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%B9%B6%E6%BC%94%E7%A4%BA\">第四步 服务启动并演示 <a class=\"header-anchor\" href=\"#%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%B9%B6%E6%BC%94%E7%A4%BA\">#</a></h5>\n<p>tcc-transaction-dubbo-capital、tcc-transaction-dubbo-redpacket、tcc-transaction-dubbo-order依次启动<br>\n测试页面入口：<a href=\"http://localhost:8081\">http://localhost:8081</a></p>\n<h5 id=\"%E7%89%B9%E5%88%AB%E6%B3%A8%E6%84%8F\">特别注意 <a class=\"header-anchor\" href=\"#%E7%89%B9%E5%88%AB%E6%B3%A8%E6%84%8F\">#</a></h5>\n<ul>\n<li>TCC事务的confirm和cancel方法的声明必须和try方法入参一致。</li>\n<li>如果是作为分支事务提供给上游服务调用时，接口方法必须添加注解@EnableTcc，否则会影响事务上下文传递</li>\n</ul>\n<h4 id=\"feign%E8%B0%83%E7%94%A8\">feign调用 <a class=\"header-anchor\" href=\"#feign%E8%B0%83%E7%94%A8\">#</a></h4>\n<h4 id=\"grpc%E8%B0%83%E7%94%A8\">grpc调用 <a class=\"header-anchor\" href=\"#grpc%E8%B0%83%E7%94%A8\">#</a></h4>\n",
  "link": "/zh-cn/docs/tutorial/quickstart.html",
  "meta": {}
}