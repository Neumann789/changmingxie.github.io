{
  "filename": "quickstart.md",
  "__html": "<h1 id=\"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B\">快速开始 <a class=\"header-anchor\" href=\"#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B\">#</a></h1>\n<p>让我们从一个微服务示例开始!</p>\n<h2 id=\"%E7%A4%BA%E4%BE%8B%E8%AF%B4%E6%98%8E\">示例说明 <a class=\"header-anchor\" href=\"#%E7%A4%BA%E4%BE%8B%E8%AF%B4%E6%98%8E\">#</a></h2>\n<p>用户购买商品的业务逻辑。整个业务逻辑由3个微服务提供支持：资金服务、红包服务、订单服务。</p>\n<p><strong>执行流程</strong><br>\ntry阶段正常，则执行confirm阶段, try阶段异常，则执行cancle阶段。</p>\n<ul>\n<li>try阶段</li>\n</ul>\n<blockquote>\n<p>1、订单服务(订单状态为DRAFT)，调用资金服务下单，调用红包服务下单<br>\n2、资金服务生成订单并扣除资金账户余额<br>\n3、红包服务生成订单并扣除红包余额</p>\n</blockquote>\n<ul>\n<li>confirm阶段</li>\n</ul>\n<blockquote>\n<p>1、订单服务更新订单状态为CONFIRMED<br>\n2、资金服务更新订单状态为CONFIRM<br>\n3、红包服务更新订单状态为CONFIRM</p>\n</blockquote>\n<ul>\n<li>cancel阶段</li>\n</ul>\n<blockquote>\n<p>1、订单服务更新订单状态为PAY_FAILED<br>\n2、资金服务更新订单状态为CANCEL并归还资金账户余额<br>\n3、红包服务更新订单状态为CANCEL并归还 红包余额</p>\n</blockquote>\n<h3 id=\"%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E6%9E%B6%E6%9E%84%E5%9B%BE\">微服务部署架构图 <a class=\"header-anchor\" href=\"#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E6%9E%B6%E6%9E%84%E5%9B%BE\">#</a></h3>\n<p><img src=\"../img/sample-project-deployment.png\" alt=\"微服务部署架构图\"></p>\n<h3 id=\"%E7%BA%A2%E5%8C%85%E6%9C%8D%E5%8A%A1\">红包服务 <a class=\"header-anchor\" href=\"#%E7%BA%A2%E5%8C%85%E6%9C%8D%E5%8A%A1\">#</a></h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">RedPacketTradeOrderService</span> </span>{\n    <span class=\"hljs-meta\">@EnableTcc</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(RedPacketTradeOrderDto tradeOrderDto)</span></span>;\n}\n</code></pre>\n<h3 id=\"%E8%B5%84%E9%87%91%E6%9C%8D%E5%8A%A1\">资金服务 <a class=\"header-anchor\" href=\"#%E8%B5%84%E9%87%91%E6%9C%8D%E5%8A%A1\">#</a></h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">CapitalTradeOrderService</span> </span>{\n    <span class=\"hljs-meta\">@EnableTcc</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(CapitalTradeOrderDto tradeOrderDto)</span></span>;\n}\n</code></pre>\n<h3 id=\"%E8%AE%A2%E5%8D%95%E6%9C%8D%E5%8A%A1\">订单服务 <a class=\"header-anchor\" href=\"#%E8%AE%A2%E5%8D%95%E6%9C%8D%E5%8A%A1\">#</a></h3>\n<p>主要业务逻辑如下：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> org.mengyun.tcctransaction.sample.dubbo.order.service;\n<span class=\"hljs-meta\">@Service</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PaymentServiceImpl</span> </span>{\n    <span class=\"hljs-meta\">@Autowired</span>\n    CapitalTradeOrderService capitalTradeOrderService;\n    <span class=\"hljs-meta\">@Autowired</span>\n    RedPacketTradeOrderService redPacketTradeOrderService;\n    <span class=\"hljs-meta\">@Autowired</span>\n    OrderRepository orderRepository;\n    <span class=\"hljs-meta\">@Compensable</span>(confirmMethod = <span class=\"hljs-string\">\"confirmMakePayment\"</span>, cancelMethod = <span class=\"hljs-string\">\"cancelMakePayment\"</span>, asyncConfirm = <span class=\"hljs-keyword\">false</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">makePayment</span><span class=\"hljs-params\">(@UniqueIdentity String orderNo)</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"order try make payment called.time seq:\"</span> + DateFormatUtils.format(Calendar.getInstance(), <span class=\"hljs-string\">\"yyyy-MM-dd HH:mm:ss\"</span>));\n        Order order = orderRepository.findByMerchantOrderNo(orderNo);\n        String result = capitalTradeOrderService.record(buildCapitalTradeOrderDto(order));\n        String result2 = redPacketTradeOrderService.record(buildRedPacketTradeOrderDto(order));\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">confirmMakePayment</span><span class=\"hljs-params\">(String orderNo)</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"order confirm make payment called. time seq:\"</span> + DateFormatUtils.format(Calendar.getInstance(), <span class=\"hljs-string\">\"yyyy-MM-dd HH:mm:ss\"</span>));\n        Order foundOrder = orderRepository.findByMerchantOrderNo(orderNo);\n        <span class=\"hljs-comment\">//check if the trade order status is PAYING, if no, means another call confirmMakePayment happened, return directly, ensure idempotency.</span>\n        <span class=\"hljs-keyword\">if</span> (foundOrder != <span class=\"hljs-keyword\">null</span>) {\n            foundOrder.confirm();\n            orderRepository.update(foundOrder);\n        }\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">cancelMakePayment</span><span class=\"hljs-params\">(String orderNo)</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"order cancel make payment called.time seq:\"</span> + DateFormatUtils.format(Calendar.getInstance(), <span class=\"hljs-string\">\"yyyy-MM-dd HH:mm:ss\"</span>));\n        Order foundOrder = orderRepository.findByMerchantOrderNo(orderNo);\n        <span class=\"hljs-comment\">//check if the trade order status is PAYING, if no, means another call cancelMakePayment happened, return directly, ensure idempotency.</span>\n        <span class=\"hljs-keyword\">if</span> (foundOrder != <span class=\"hljs-keyword\">null</span>) {\n            foundOrder.cancelPayment();\n            orderRepository.update(foundOrder);\n        }\n    }\n}\n\n</code></pre>\n<h2 id=\"%E7%A4%BA%E4%BE%8B%E6%BC%94%E7%A4%BA\">示例演示 <a class=\"header-anchor\" href=\"#%E7%A4%BA%E4%BE%8B%E6%BC%94%E7%A4%BA\">#</a></h2>\n<p><a href=\"/zh-cn/docs/tutorial/quickstart/local-sample.html\">local模式演示</a><br>\n<a href=\"/zh-cn/docs/tutorial/quickstart/server-sample.html\">server模式演示</a></p>\n",
  "link": "/zh-cn/docs/tutorial/quickstart.html",
  "meta": {}
}