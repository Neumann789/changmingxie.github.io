{
  "filename": "server-sample.md",
  "__html": "<h1 id=\"server%E6%A8%A1%E5%BC%8F%E7%A4%BA%E4%BE%8B\">server模式示例 <a class=\"header-anchor\" href=\"#server%E6%A8%A1%E5%BC%8F%E7%A4%BA%E4%BE%8B\">#</a></h1>\n<p>这里用http-sample来介绍如何使用tcc-transaction的<a href=\"/zh-cn/docs/tutorial/connectionmode/server.html\"><strong>server模式</strong></a><br>\n<strong>示例工程:</strong><a href=\"https://github.com/changmingxie/tcc-transaction/tree/master-2.x/tcc-transaction-tutorial-sample/tcc-transaction-http-sample\">tcc-transaction-http-sample</a></p>\n<blockquote>\n<p>tcc-transaction-http-capital(资金服务)<br>\ntcc-transaction-http-redpacket(红包服务)<br>\ntcc-transaction-http-order(订单服务)</p>\n</blockquote>\n<p><strong>sample特征</strong>：</p>\n<ul>\n<li>采用openfeigin的远程调用方式</li>\n<li>springboot启动，application.yaml配置tcc</li>\n<li>采用tcc-transaction的server模式</li>\n</ul>\n<p><strong>示例图</strong><br>\n<img src=\"../../img/sample_tcc_server.jpg\" alt=\"server模式示例\"></p>\n<p>以下将一步一步教大家如何使用tcc-transaction的server模式<br>\n<strong>步骤如下</strong></p>\n<ul>\n<li>server部署</li>\n<li>dashboard部署</li>\n<li>资金服务开发</li>\n<li>红包服务开发</li>\n<li>订单服务开发</li>\n<li>功能演示</li>\n</ul>\n<h2 id=\"server%E9%83%A8%E7%BD%B2\">server部署 <a class=\"header-anchor\" href=\"#server%E9%83%A8%E7%BD%B2\">#</a></h2>\n<p>详见<a href=\"/zh-cn/docs/ops/server/deploy-alone.html\">server单机部署</a><br>\n这里以注册中心[direct]+存储类型[memory]+任务部署类型[quartz集群模式]的组合，application.yaml可如下配置：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">server:</span>\n  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">12332</span>\n<span class=\"hljs-attr\">logging:</span>\n  <span class=\"hljs-attr\">level:</span>\n    <span class=\"hljs-attr\">root:</span> <span class=\"hljs-string\">info</span>\n<span class=\"hljs-attr\">spring:</span>\n  <span class=\"hljs-attr\">application:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">tcc-transaction-server</span>\n  <span class=\"hljs-attr\">tcc:</span>\n    <span class=\"hljs-attr\">storage:</span>\n      <span class=\"hljs-attr\">storage-type:</span> <span class=\"hljs-string\">memory</span>\n      <span class=\"hljs-attr\">max-attempts:</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-attr\">recovery:</span>\n      <span class=\"hljs-attr\">quartz-clustered:</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-attr\">quartz-data-source-url:</span> <span class=\"hljs-string\">jdbc:mysql://localhost:3306/TCC_SERVER?useSSL=false&amp;allowPublicKeyRetrieval=true</span>\n      <span class=\"hljs-attr\">quartz-data-source-driver:</span> <span class=\"hljs-string\">com.mysql.jdbc.Driver</span>\n      <span class=\"hljs-attr\">quartz-data-source-user:</span> <span class=\"hljs-string\">root</span>\n      <span class=\"hljs-attr\">quartz-data-source-password:</span> <span class=\"hljs-string\">welcome1</span>\n    <span class=\"hljs-attr\">registry:</span>\n      <span class=\"hljs-attr\">registry-type:</span> <span class=\"hljs-string\">direct</span>\n      <span class=\"hljs-attr\">cluster-name:</span> <span class=\"hljs-string\">default</span>\n    <span class=\"hljs-attr\">remoting:</span>\n      <span class=\"hljs-attr\">listen-port:</span> <span class=\"hljs-number\">2332</span>\n\n</code></pre>\n<h2 id=\"dashboard%E9%83%A8%E7%BD%B2\">dashboard部署 <a class=\"header-anchor\" href=\"#dashboard%E9%83%A8%E7%BD%B2\">#</a></h2>\n<p>详见<a href=\"/zh-cn/docs/ops/dashboard/deploy-server.html\">dashboard之server模式部署</a><br>\n注册中心采用direct方式，application.yaml配置可如下</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">server:</span>\n  <span class=\"hljs-attr\">servlet:</span>\n    <span class=\"hljs-attr\">context-path:</span> <span class=\"hljs-string\">/tcc-transaction-dashboard</span>\n  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">22332</span>\n\n<span class=\"hljs-attr\">logging:</span>\n  <span class=\"hljs-attr\">level:</span>\n    <span class=\"hljs-attr\">root:</span> <span class=\"hljs-string\">info</span>\n<span class=\"hljs-attr\">spring:</span>\n  <span class=\"hljs-attr\">application:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">tcc-transaction-dashboard</span>\n  <span class=\"hljs-attr\">tcc:</span>\n    <span class=\"hljs-attr\">dashboard:</span>\n      <span class=\"hljs-attr\">userName:</span> <span class=\"hljs-string\">admin</span>\n      <span class=\"hljs-attr\">password:</span> <span class=\"hljs-number\">123456</span>\n      <span class=\"hljs-attr\">data-fetch-type:</span> <span class=\"hljs-string\">tccserver</span>\n      <span class=\"hljs-attr\">registry:</span> <span class=\"hljs-comment\"># data-fetch-type为server时使用</span>\n        <span class=\"hljs-attr\">registry-type:</span> <span class=\"hljs-string\">direct</span>\n        <span class=\"hljs-attr\">direct:</span>\n          <span class=\"hljs-attr\">server-addresses:</span> <span class=\"hljs-string\">http://localhost:12332</span>\n    <span class=\"hljs-attr\">recovery:</span>\n      <span class=\"hljs-attr\">quartz-clustered:</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-attr\">quartz-data-source-url:</span> <span class=\"hljs-string\">jdbc:mysql://localhost:3306/TCC_SERVER?useSSL=false&amp;allowPublicKeyRetrieval=true</span>\n      <span class=\"hljs-attr\">quartz-data-source-driver:</span> <span class=\"hljs-string\">com.mysql.jdbc.Driver</span>\n      <span class=\"hljs-attr\">quartz-data-source-user:</span> <span class=\"hljs-string\">root</span>\n      <span class=\"hljs-attr\">quartz-data-source-password:</span> <span class=\"hljs-string\">welcome1</span>\n\n</code></pre>\n<h2 id=\"%E8%B5%84%E9%87%91%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91\">资金服务开发 <a class=\"header-anchor\" href=\"#%E8%B5%84%E9%87%91%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91\">#</a></h2>\n<p>涉及两个模块的开发：</p>\n<ul>\n<li>tcc-transaction-http-capital-api</li>\n<li>tcc-transaction-http-capital</li>\n</ul>\n<h3 id=\"tcc-transaction-http-capital-api%E5%BC%80%E5%8F%91\">tcc-transaction-http-capital-api开发 <a class=\"header-anchor\" href=\"#tcc-transaction-http-capital-api%E5%BC%80%E5%8F%91\">#</a></h3>\n<p>这里仅给出了相关dto定义</p>\n<h3 id=\"tcc-transaction-http-capital%E5%BC%80%E5%8F%91\">tcc-transaction-http-capital开发 <a class=\"header-anchor\" href=\"#tcc-transaction-http-capital%E5%BC%80%E5%8F%91\">#</a></h3>\n<p>提供资金相关操作实现、服务暴露等功能</p>\n<h4 id=\"%E6%B7%BB%E5%8A%A0maven%E4%BE%9D%E8%B5%96\">添加maven依赖 <a class=\"header-anchor\" href=\"#%E6%B7%BB%E5%8A%A0maven%E4%BE%9D%E8%B5%96\">#</a></h4>\n<p>请选用<a href=\"https://github.com/changmingxie/tcc-transaction/releases\">最新版本</a></p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mengyun<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>tcc-transaction-http<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${tcc-transaction.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mengyun<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>tcc-transaction-spring-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${tcc-transaction.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<h4 id=\"application.yaml%E9%85%8D%E7%BD%AE\">application.yaml配置 <a class=\"header-anchor\" href=\"#application.yaml%E9%85%8D%E7%BD%AE\">#</a></h4>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">spring:</span>\n  <span class=\"hljs-attr\">main:</span>\n    <span class=\"hljs-attr\">allow-bean-definition-overriding:</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-attr\">application:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">tcc-transaction-http-capital</span>\n  <span class=\"hljs-attr\">tcc:</span>\n    <span class=\"hljs-attr\">storage:</span>\n      <span class=\"hljs-attr\">storage-type:</span> <span class=\"hljs-string\">remoting</span>\n      <span class=\"hljs-attr\">domain:</span> <span class=\"hljs-string\">\"TCC:FEIGN:CAPITAL\"</span>\n    <span class=\"hljs-attr\">recovery:</span>\n      <span class=\"hljs-attr\">recovery-enabled:</span> <span class=\"hljs-literal\">false</span>\n    <span class=\"hljs-attr\">registry:</span>\n      <span class=\"hljs-attr\">registry-type:</span> <span class=\"hljs-string\">direct</span>\n      <span class=\"hljs-attr\">cluster-name:</span> <span class=\"hljs-string\">default</span>\n      <span class=\"hljs-attr\">direct:</span>\n        <span class=\"hljs-attr\">server-addresses:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-string\">:2332</span>\n<span class=\"hljs-attr\">server:</span>\n  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8082</span>\n  <span class=\"hljs-attr\">servlet:</span>\n    <span class=\"hljs-attr\">context-path:</span> <span class=\"hljs-string\">/${spring.application.name}</span>\n<span class=\"hljs-attr\">logging:</span>\n  <span class=\"hljs-attr\">level:</span>\n    <span class=\"hljs-attr\">root:</span> <span class=\"hljs-string\">info</span>\n</code></pre>\n<h4 id=\"tcc%E5%AE%9E%E7%8E%B0\">tcc实现 <a class=\"header-anchor\" href=\"#tcc%E5%AE%9E%E7%8E%B0\">#</a></h4>\n<p>在tcc实现上方法上添加<a href=\"/zh-cn/docs/tutorial/api.html#%40compensable\">@Compensable</a>注解，设置confirmMethod和cancelMethod方法，分别为tcc的confirm和cancel方法。<br>\n<strong>特别注意</strong>：confirm和cancel方法参数要与try保持一致。</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@RestController</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CapitalController</span> </span>{\n\n    <span class=\"hljs-meta\">@RequestMapping</span>(value = <span class=\"hljs-string\">\"/tradeOrder/record\"</span>, method = RequestMethod.POST)\n    <span class=\"hljs-meta\">@Compensable</span>(confirmMethod = <span class=\"hljs-string\">\"confirmRecord\"</span>, cancelMethod = <span class=\"hljs-string\">\"cancelRecord\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(@RequestBody CapitalTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"success\"</span>;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">confirmRecord</span><span class=\"hljs-params\">(CapitalTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">cancelRecord</span><span class=\"hljs-params\">(CapitalTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n    }\n}\n\n\n</code></pre>\n<h2 id=\"%E7%BA%A2%E5%8C%85%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91\">红包服务开发 <a class=\"header-anchor\" href=\"#%E7%BA%A2%E5%8C%85%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91\">#</a></h2>\n<p>涉及两个模块的开发：</p>\n<ul>\n<li>tcc-transaction-http-redpacket-api</li>\n<li>tcc-transaction-http-redpacket</li>\n</ul>\n<h3 id=\"tcc-transaction-http-redpacket-api%E5%BC%80%E5%8F%91\">tcc-transaction-http-redpacket-api开发 <a class=\"header-anchor\" href=\"#tcc-transaction-http-redpacket-api%E5%BC%80%E5%8F%91\">#</a></h3>\n<p>这里仅给出了相关dto定义</p>\n<h3 id=\"tcc-transaction-http-redpacket%E5%BC%80%E5%8F%91\">tcc-transaction-http-redpacket开发 <a class=\"header-anchor\" href=\"#tcc-transaction-http-redpacket%E5%BC%80%E5%8F%91\">#</a></h3>\n<p>提供红包相关操作实现、服务暴露等功能</p>\n<h4 id=\"%E6%B7%BB%E5%8A%A0maven%E4%BE%9D%E8%B5%96-1\">添加maven依赖 <a class=\"header-anchor\" href=\"#%E6%B7%BB%E5%8A%A0maven%E4%BE%9D%E8%B5%96-1\">#</a></h4>\n<p>请选用<a href=\"https://github.com/changmingxie/tcc-transaction/releases\">最新版本</a></p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mengyun<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>tcc-transaction-http<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${tcc-transaction.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mengyun<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>tcc-transaction-spring-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${tcc-transaction.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<h4 id=\"application.yaml%E9%85%8D%E7%BD%AE-1\">application.yaml配置 <a class=\"header-anchor\" href=\"#application.yaml%E9%85%8D%E7%BD%AE-1\">#</a></h4>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">spring:</span>\n  <span class=\"hljs-attr\">main:</span>\n    <span class=\"hljs-attr\">allow-bean-definition-overriding:</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-attr\">application:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">tcc-transaction-http-capital</span>\n  <span class=\"hljs-attr\">tcc:</span>\n    <span class=\"hljs-attr\">storage:</span>\n      <span class=\"hljs-attr\">storage-type:</span> <span class=\"hljs-string\">remoting</span>\n      <span class=\"hljs-attr\">domain:</span> <span class=\"hljs-string\">\"TCC:FEIGN:REDPACKET\"</span>\n    <span class=\"hljs-attr\">recovery:</span>\n      <span class=\"hljs-attr\">recovery-enabled:</span> <span class=\"hljs-literal\">false</span>\n    <span class=\"hljs-attr\">registry:</span>\n      <span class=\"hljs-attr\">registry-type:</span> <span class=\"hljs-string\">direct</span>\n      <span class=\"hljs-attr\">cluster-name:</span> <span class=\"hljs-string\">default</span>\n      <span class=\"hljs-attr\">direct:</span>\n        <span class=\"hljs-attr\">server-addresses:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-string\">:2332</span>\n<span class=\"hljs-attr\">server:</span>\n  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8082</span>\n  <span class=\"hljs-attr\">servlet:</span>\n    <span class=\"hljs-attr\">context-path:</span> <span class=\"hljs-string\">/${spring.application.name}</span>\n<span class=\"hljs-attr\">logging:</span>\n  <span class=\"hljs-attr\">level:</span>\n    <span class=\"hljs-attr\">root:</span> <span class=\"hljs-string\">info</span>\n</code></pre>\n<h4 id=\"tcc%E5%AE%9E%E7%8E%B0-1\">tcc实现 <a class=\"header-anchor\" href=\"#tcc%E5%AE%9E%E7%8E%B0-1\">#</a></h4>\n<p>在tcc实现上方法上添加<a href=\"/zh-cn/docs/tutorial/api.html#%40compensable\">@Compensable</a>注解，设置confirmMethod和cancelMethod方法，分别为tcc的confirm和cancel方法。<br>\n<strong>特别注意</strong>：confirm和cancel方法参数要与try保持一致。</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@RestController</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RedpacketController</span> </span>{\n    <span class=\"hljs-meta\">@RequestMapping</span>(value = <span class=\"hljs-string\">\"/tradeOrder/record\"</span>, method = RequestMethod.POST)\n    <span class=\"hljs-meta\">@Compensable</span>(confirmMethod = <span class=\"hljs-string\">\"confirmRecord\"</span>, cancelMethod = <span class=\"hljs-string\">\"cancelRecord\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(@RequestBody RedPacketTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do something...</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"success\"</span>;\n    }\n\n    <span class=\"hljs-meta\">@Transactional</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">confirmRecord</span><span class=\"hljs-params\">(RedPacketTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do something...</span>\n    }\n\n    <span class=\"hljs-meta\">@Transactional</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">cancelRecord</span><span class=\"hljs-params\">(RedPacketTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-comment\">// do something...</span>\n    }\n}\n\n</code></pre>\n<h2 id=\"%E8%AE%A2%E5%8D%95%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91\">订单服务开发 <a class=\"header-anchor\" href=\"#%E8%AE%A2%E5%8D%95%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91\">#</a></h2>\n<p>提供下单支付相关功能，只有一个模块tcc-transaction-http-order</p>\n<h3 id=\"tcc-transaction-http-order%E5%BC%80%E5%8F%91\">tcc-transaction-http-order开发 <a class=\"header-anchor\" href=\"#tcc-transaction-http-order%E5%BC%80%E5%8F%91\">#</a></h3>\n<p>提供下单支付相关功能</p>\n<h4 id=\"%E6%B7%BB%E5%8A%A0maven%E4%BE%9D%E8%B5%96-2\">添加maven依赖 <a class=\"header-anchor\" href=\"#%E6%B7%BB%E5%8A%A0maven%E4%BE%9D%E8%B5%96-2\">#</a></h4>\n<p>请选用<a href=\"https://github.com/changmingxie/tcc-transaction/releases\">最新版本</a></p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mengyun<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>tcc-transaction-http<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${tcc-transaction.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mengyun<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>tcc-transaction-spring-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${tcc-transaction.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<h4 id=\"application.yaml%E9%85%8D%E7%BD%AE-2\">application.yaml配置 <a class=\"header-anchor\" href=\"#application.yaml%E9%85%8D%E7%BD%AE-2\">#</a></h4>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">spring:</span>\n  <span class=\"hljs-attr\">main:</span>\n    <span class=\"hljs-attr\">allow-bean-definition-overriding:</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-attr\">application:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">tcc-transaction-http-capital</span>\n  <span class=\"hljs-attr\">tcc:</span>\n    <span class=\"hljs-attr\">storage:</span>\n      <span class=\"hljs-attr\">storage-type:</span> <span class=\"hljs-string\">remoting</span>\n      <span class=\"hljs-attr\">domain:</span> <span class=\"hljs-string\">\"TCC:FEIGN:ORDER\"</span>\n    <span class=\"hljs-attr\">recovery:</span>\n      <span class=\"hljs-attr\">recovery-enabled:</span> <span class=\"hljs-literal\">false</span>\n    <span class=\"hljs-attr\">registry:</span>\n      <span class=\"hljs-attr\">registry-type:</span> <span class=\"hljs-string\">direct</span>\n      <span class=\"hljs-attr\">cluster-name:</span> <span class=\"hljs-string\">default</span>\n      <span class=\"hljs-attr\">direct:</span>\n        <span class=\"hljs-attr\">server-addresses:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-string\">:2332</span>\n<span class=\"hljs-attr\">server:</span>\n  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8082</span>\n  <span class=\"hljs-attr\">servlet:</span>\n    <span class=\"hljs-attr\">context-path:</span> <span class=\"hljs-string\">/${spring.application.name}</span>\n<span class=\"hljs-attr\">logging:</span>\n  <span class=\"hljs-attr\">level:</span>\n    <span class=\"hljs-attr\">root:</span> <span class=\"hljs-string\">info</span>\n</code></pre>\n<h4 id=\"tcc%E5%AE%9E%E7%8E%B0-2\">tcc实现 <a class=\"header-anchor\" href=\"#tcc%E5%AE%9E%E7%8E%B0-2\">#</a></h4>\n<p>在tcc实现上方法上添加<a href=\"/zh-cn/docs/tutorial/api.html#%40compensable\">@Compensable</a>注解，设置confirmMethod和cancelMethod方法，分别为tcc的confirm和cancel方法。<br>\n<strong>特别注意</strong>：confirm和cancel方法参数要与try保持一致。<br>\n<strong>PaymentServiceImpl</strong></p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Service</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PaymentServiceImpl</span> </span>{\n    <span class=\"hljs-meta\">@Autowired</span>\n    <span class=\"hljs-keyword\">private</span> TradeOrderServiceProxy tradeOrderServiceProxy;\n    <span class=\"hljs-meta\">@Autowired</span>\n    <span class=\"hljs-keyword\">private</span> OrderRepository orderRepository;\n\n    <span class=\"hljs-meta\">@Compensable</span>(confirmMethod = <span class=\"hljs-string\">\"confirmMakePayment\"</span>, cancelMethod = <span class=\"hljs-string\">\"cancelMakePayment\"</span>, asyncConfirm = <span class=\"hljs-keyword\">true</span>)\n    <span class=\"hljs-meta\">@Transactional</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">makePayment</span><span class=\"hljs-params\">(String orderNo)</span> </span>{\n        Order order = orderRepository.findByMerchantOrderNo(orderNo);\n        tradeOrderServiceProxy.record(buildCapitalTradeOrderDto(order));\n        tradeOrderServiceProxy.record(buildRedPacketTradeOrderDto(order));\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">confirmMakePayment</span><span class=\"hljs-params\">(String orderNo)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">cancelMakePayment</span><span class=\"hljs-params\">(String orderNo)</span> </span>{\n        <span class=\"hljs-comment\">// do something ...</span>\n    }\n\n}\n\n</code></pre>\n<p><strong>TradeOrderServiceProxy</strong></p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Component</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TradeOrderServiceProxy</span> </span>{\n\n    <span class=\"hljs-meta\">@Autowired</span>\n    <span class=\"hljs-keyword\">private</span> CapitalFeignClient capitalFeignClient;\n\n    <span class=\"hljs-meta\">@Autowired</span>\n    <span class=\"hljs-keyword\">private</span> RedPacketFeignClient redPacketFeignClient;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(CapitalTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> capitalFeignClient.record(tradeOrderDto);\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(RedPacketTradeOrderDto tradeOrderDto)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> redPacketFeignClient.record(tradeOrderDto);\n    }\n}\n\n</code></pre>\n<p>调用capital服务record接口上，添加<a href=\"/zh-cn/docs/tutorial/api.html#%40enabletcc\">@EnableTcc</a>，来传递上下文\n<strong>CapitalFeignClient</strong></p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@FeignClient</span>(name = <span class=\"hljs-string\">\"capital\"</span>, url = <span class=\"hljs-string\">\"http://localhost:8082/tcc-transaction-http-capital/\"</span>)\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">CapitalFeignClient</span> </span>{\n    <span class=\"hljs-meta\">@EnableTcc</span>\n    <span class=\"hljs-meta\">@RequestMapping</span>(value = <span class=\"hljs-string\">\"/tradeOrder/record\"</span>, method = RequestMethod.POST)\n    <span class=\"hljs-meta\">@ResponseBody</span>\n    <span class=\"hljs-function\">String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(@RequestBody CapitalTradeOrderDto tradeOrderDto)</span></span>;\n}\n\n</code></pre>\n<p>调用redpacket服务record接口上，添加<a href=\"/zh-cn/docs/tutorial/api.html#%40enabletcc\">@EnableTcc</a>，来传递上下文\n<strong>RedPacketFeignClient</strong></p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@FeignClient</span>(name = <span class=\"hljs-string\">\"redPacket\"</span>, url = <span class=\"hljs-string\">\"http://localhost:8083/tcc-transaction-http-redpacket/\"</span>)\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">RedPacketFeignClient</span> </span>{\n    <span class=\"hljs-meta\">@EnableTcc</span>\n    <span class=\"hljs-meta\">@RequestMapping</span>(value = <span class=\"hljs-string\">\"/tradeOrder/record\"</span>, method = RequestMethod.POST)\n    <span class=\"hljs-meta\">@ResponseBody</span>\n    <span class=\"hljs-function\">String <span class=\"hljs-title\">record</span><span class=\"hljs-params\">(@RequestBody RedPacketTradeOrderDto tradeOrderDto)</span></span>;\n}\n\n</code></pre>\n<h2 id=\"%E5%8A%9F%E8%83%BD%E6%BC%94%E7%A4%BA\">功能演示 <a class=\"header-anchor\" href=\"#%E5%8A%9F%E8%83%BD%E6%BC%94%E7%A4%BA\">#</a></h2>\n<h3 id=\"%E6%9C%AC%E5%9C%B0%E5%90%AF%E5%8A%A8\">本地启动 <a class=\"header-anchor\" href=\"#%E6%9C%AC%E5%9C%B0%E5%90%AF%E5%8A%A8\">#</a></h3>\n<p>分别启动tcc-transaction-http-capital、tcc-transaction-http-redpacket、tcc-transaction-http-order\n<img src=\"../../img/dubbo_sample_server_idea_start_view.jpg\" alt=\"服务启动\"></p>\n<h4 id=\"%E6%B5%8B%E8%AF%95%E9%A1%B5%E9%9D%A2%E6%BC%94%E7%A4%BA\">测试页面演示 <a class=\"header-anchor\" href=\"#%E6%B5%8B%E8%AF%95%E9%A1%B5%E9%9D%A2%E6%BC%94%E7%A4%BA\">#</a></h4>\n<p>测试页面入口：<a href=\"http://localhost:8081\">http://localhost:8081</a>\n<img src=\"../../img/page_tcc_sample_order.jpg\" alt=\"下单商品页\"><br>\n选择购买商品\n<img src=\"../../img/page_dubbo_sample_pay.jpg\" alt=\"支付\">\n点击支付按钮\n<img src=\"../../img/page_dubbo_sample_pay_result.jpg\" alt=\"支付结果页\"></p>\n<h4 id=\"%E6%97%A5%E5%BF%97%E6%BC%94%E7%A4%BA\">日志演示 <a class=\"header-anchor\" href=\"#%E6%97%A5%E5%BF%97%E6%BC%94%E7%A4%BA\">#</a></h4>\n<p>注意调用的先后顺序。\ntry阶段</p>\n<pre><code class=\"language-text\">1、order try make payment called.time seq:2022-07-13 17:46:04\n2、capital try record called. time seq:2022-07-13 17:46:06\n3、red packet try record called. time seq:2022-07-13 17:46:07\n</code></pre>\n<p>confirm阶段</p>\n<pre><code class=\"language-text\">1、order confirm make payment called. time seq:2022-07-13 17:46:08\n2、capital confirm record called. time seq:2022-07-13 17:46:09\n3、red packet confirm record called. time seq:2022-07-13 17:46:10\n</code></pre>\n<h4 id=\"dashboard%E6%BC%94%E7%A4%BA\">dashboard演示 <a class=\"header-anchor\" href=\"#dashboard%E6%BC%94%E7%A4%BA\">#</a></h4>\n<p>访问地址：<a href=\"http://localhost:22332/tcc-transaction-dashboard\">http://localhost:22332/tcc-transaction-dashboard</a><br>\n默认用户: admin<br>\n默认密码：123456<br>\n详细操作参考<a href=\"/zh-cn/docs/ops/dashboard/dashboard-guild.html\">dashboard使用手册</a></p>\n<p><strong>首页</strong><br>\n登录成功后进入首页<br>\n<img src=\"../../img/sample_dashboard_server_welcome.jpg\" alt=\"首页\"></p>\n<p><strong>Domain管理</strong><br>\n资金、红包、订单这三个服务启动，会自动注册domain<br>\n<img src=\"../../img/sample_dashboard_server_domain_manage.jpg\" alt=\"Domain管理\"></p>\n<p><strong>事件管理</strong><br>\n出现异常事件，或者发生事件堆积，可以通过事件管理查看，并进行相关操作<br>\n<img src=\"../../img/sample_dashboard_server_transaction_manage_show.jpg\" alt=\"事件管理\"></p>\n<p><strong>任务管理</strong><br>\ndashboard server模式比embedded模式多一个任务管理，quartz采用集群模式时，可以对任务进行停止、恢复、修改cron等操作<br>\n<img src=\"../../img/sample_dashboard_server_task_manage_show.jpg\" alt=\"任务管理\"></p>\n<h2 id=\"%E7%BB%93%E6%9D%9F\">结束 <a class=\"header-anchor\" href=\"#%E7%BB%93%E6%9D%9F\">#</a></h2>\n<p><strong>注意事项</strong></p>\n<ul>\n<li>TCC事务的confirm和cancel方法的声明必须和try方法入参一致。</li>\n<li>如果是作为分支事务提供给上游服务调用时，接口方法必须添加注解@EnableTcc，否则会影响事务上下文传递</li>\n<li>客户端如果选择server模式，务必先把tcc-server服务启动起来</li>\n</ul>\n<p>恭喜你，顺序正确说明http-sample项目运行成功。</p>\n",
  "link": "/zh-cn/docs/tutorial/quickstart/server-sample.html",
  "meta": {}
}