{
  "filename": "server-sample.md",
  "__html": "<h1 id=\"server%E6%A8%A1%E5%BC%8F%E6%BC%94%E7%A4%BA\">server模式演示 <a class=\"header-anchor\" href=\"#server%E6%A8%A1%E5%BC%8F%E6%BC%94%E7%A4%BA\">#</a></h1>\n<h3 id=\"http-sample%E6%BC%94%E7%A4%BA(server%E6%A8%A1%E5%BC%8F)\">http-sample演示(server模式) <a class=\"header-anchor\" href=\"#http-sample%E6%BC%94%E7%A4%BA(server%E6%A8%A1%E5%BC%8F)\">#</a></h3>\n<p>示例工程:<a href=\"https://github.com/changmingxie/tcc-transaction/tree/master-2.x/tcc-transaction-tutorial-sample/tcc-transaction-http-sample\">tcc-transaction-http-sample</a></p>\n<blockquote>\n<p>tcc-transaction-http-capital(资金服务)<br>\ntcc-transaction-http-redpacket(红包服务)<br>\ntcc-transaction-http-order(订单服务)</p>\n</blockquote>\n<p>以下为openfeign远程调用方式下如何使用tcc-tranction的server模式</p>\n<h4 id=\"%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\">环境准备 <a class=\"header-anchor\" href=\"#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\">#</a></h4>\n<ul>\n<li><a href=\"/zh-cn/docs/ops/dashboard/deploy-server.html\">dashboard快速部署</a></li>\n<li><a href=\"/zh-cn/docs/ops/tccserver/deploy-alone.html\">server快速部署</a></li>\n</ul>\n<h4 id=\"%E7%AC%AC%E4%B8%80%E6%AD%A5-pom%E5%BC%95%E5%85%A5\">第一步 pom引入 <a class=\"header-anchor\" href=\"#%E7%AC%AC%E4%B8%80%E6%AD%A5-pom%E5%BC%95%E5%85%A5\">#</a></h4>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mengyun<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>tcc-transaction-http<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${tcc-transaction.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mengyun<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>tcc-transaction-spring-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${tcc-transaction.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<h4 id=\"%E7%AC%AC%E4%BA%8C%E6%AD%A5-application.yaml%E9%85%8D%E7%BD%AE\">第二步 application.yaml配置 <a class=\"header-anchor\" href=\"#%E7%AC%AC%E4%BA%8C%E6%AD%A5-application.yaml%E9%85%8D%E7%BD%AE\">#</a></h4>\n<p>这里以tcc-transaction-http-order中application.yaml为例</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">spring:</span>\n  <span class=\"hljs-attr\">application:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">tcc-transaction-http-order</span>\n  <span class=\"hljs-attr\">tcc:</span>\n    <span class=\"hljs-attr\">recovery:</span>\n      <span class=\"hljs-comment\"># 集群模式下，关闭客户端补偿任务</span>\n      <span class=\"hljs-attr\">recovery-enabled:</span> <span class=\"hljs-literal\">false</span>\n    <span class=\"hljs-attr\">storage:</span>\n      <span class=\"hljs-comment\"># 开启server模式</span>\n      <span class=\"hljs-attr\">storage-type:</span> <span class=\"hljs-string\">remoting</span>\n      <span class=\"hljs-attr\">domain:</span> <span class=\"hljs-string\">\"TCC:FEIGN:ORDER:\"</span>\n    <span class=\"hljs-comment\">#      location: /tmp/${spring.tcc.storage.domain}</span>\n    <span class=\"hljs-comment\">#      serializer-type: customized</span>\n    <span class=\"hljs-comment\">#      transaction-serializer-class-name: org.mengyun.tcctransaction.serializer.json.JacksonTransactionSerializer</span>\n    <span class=\"hljs-comment\">#      max-transaction-size: 100000</span>\n    <span class=\"hljs-comment\">#      storage-mode: central</span>\n    <span class=\"hljs-attr\">registry:</span>\n      <span class=\"hljs-comment\"># 直连tcc-server</span>\n      <span class=\"hljs-attr\">registry-type:</span> <span class=\"hljs-string\">direct</span>\n      <span class=\"hljs-attr\">cluster-name:</span> <span class=\"hljs-string\">default</span>\n      <span class=\"hljs-attr\">direct:</span>\n        <span class=\"hljs-attr\">server-addresses:</span> <span class=\"hljs-number\">127.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><span class=\"hljs-string\">:2332</span>\n<span class=\"hljs-comment\">#      zookeeper:</span>\n<span class=\"hljs-comment\">#        connect-string: 127.0.0.1:2181</span>\n<span class=\"hljs-comment\">#        max-retries: 4</span>\n<span class=\"hljs-comment\">#      nacos:</span>\n<span class=\"hljs-comment\">#        server-addr: 127.0.0.1:8848</span>\n<span class=\"hljs-attr\">server:</span>\n  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8081</span>\n</code></pre>\n<h4 id=\"%E7%AC%AC%E4%B8%89%E6%AD%A5-%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8\">第三步 代码使用 <a class=\"header-anchor\" href=\"#%E7%AC%AC%E4%B8%89%E6%AD%A5-%E4%BB%A3%E7%A0%81%E4%BD%BF%E7%94%A8\">#</a></h4>\n<p>参考<a href=\"#dubbo-sample-code-use\">dubbo-sample演示</a></p>\n<h4 id=\"%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%B9%B6%E6%BC%94%E7%A4%BA\">第四步 服务启动并演示 <a class=\"header-anchor\" href=\"#%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%B9%B6%E6%BC%94%E7%A4%BA\">#</a></h4>\n<h5 id=\"%E6%9C%AC%E5%9C%B0idea%E5%90%AF%E5%8A%A8\">本地idea启动 <a class=\"header-anchor\" href=\"#%E6%9C%AC%E5%9C%B0idea%E5%90%AF%E5%8A%A8\">#</a></h5>\n<p>分别启动tcc-transaction-http-capital、tcc-transaction-http-redpacket、tcc-transaction-http-order</p>\n<h5 id=\"%E9%A1%B5%E9%9D%A2%E6%BC%94%E7%A4%BA\">页面演示 <a class=\"header-anchor\" href=\"#%E9%A1%B5%E9%9D%A2%E6%BC%94%E7%A4%BA\">#</a></h5>\n<p>测试页面入口：<a href=\"http://localhost:8081\">http://localhost:8081</a>\n<img src=\"../img/page_tcc_sample_order.jpg\" alt=\"下单商品页\"><br>\n选择购买商品\n<img src=\"../img/page_dubbo_sample_pay.jpg\" alt=\"支付\">\n点击支付按钮\n<img src=\"../img/page_dubbo_sample_pay_result.jpg\" alt=\"支付结果页\"></p>\n<h5 id=\"%E6%97%A5%E5%BF%97%E6%98%BE%E7%A4%BA\">日志显示 <a class=\"header-anchor\" href=\"#%E6%97%A5%E5%BF%97%E6%98%BE%E7%A4%BA\">#</a></h5>\n<p>try阶段</p>\n<pre><code class=\"language-text\">1、order try make payment called.time seq:2022-07-13 17:46:04\n2、capital try record called. time seq:2022-07-13 17:46:06\n3、red packet try record called. time seq:2022-07-13 17:46:07\n</code></pre>\n<p>confirm阶段</p>\n<pre><code class=\"language-text\">1、order confirm make payment called. time seq:2022-07-13 17:46:08\n2、capital confirm record called. time seq:2022-07-13 17:46:09\n3、red packet confirm record called. time seq:2022-07-13 17:46:10\n</code></pre>\n<h5 id=\"dashboard%E6%95%88%E6%9E%9C\">dashboard效果 <a class=\"header-anchor\" href=\"#dashboard%E6%95%88%E6%9E%9C\">#</a></h5>\n<p>恭喜你，顺序正确说明http-sample项目运行成功。</p>\n<h3 id=\"%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">注意事项 <a class=\"header-anchor\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">#</a></h3>\n<ul>\n<li>TCC事务的confirm和cancel方法的声明必须和try方法入参一致。</li>\n<li>如果是作为分支事务提供给上游服务调用时，接口方法必须添加注解@EnableTcc，否则会影响事务上下文传递</li>\n<li>客户端如果选择server模式，务必先把tcc-server服务启动起来</li>\n</ul>\n",
  "link": "/zh-cn/docs/tutorial/quickstart/server-sample.html",
  "meta": {}
}